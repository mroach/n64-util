#!/usr/bin/env ruby
# frozen_string_literal: true

path = ARGV[0]

if path.nil?
  warn("Usage: #{__FILE__} PATH")
  exit 1
end

require_relative "lib/n64"

BYTE_SWAP_SIZE = { n64: 4, v64: 2 }

ANSI_STYLES = { reset: "\e[0m", ul: "\e[4m" }

Dir[File.join(path, "*.{n64,v64,z64}")].map do |file_path|
  info = N64::RomInfo.new(file_path)
  file_format = info.file_format

  next if file_format == :z64

  actual_ext = File.extname(file_path)
  proper_ext = ".#{file_format}"

  file_name = File.basename(file_path)
  bare_name = File.basename(file_name, ".*")

  proper_name = "#{bare_name}#{proper_ext}"
  proper_path = File.join(File.dirname(file_path), proper_name)
  native_path = File.join(File.dirname(file_path), "#{bare_name}.z64")

  puts "#{ANSI_STYLES[:ul]}#{file_name}#{ANSI_STYLES[:reset]} is in #{file_format} format."

  if proper_ext != actual_ext
    puts <<~EOF
      Its file extension is wrong. To fix:
        $ mv "#{file_path}" "#{proper_path}"

    EOF
  end

  puts <<~EOF
    To convert the file to the native file format:
      $ objcopy -I binary -O binary --reverse-bytes=#{BYTE_SWAP_SIZE.fetch(file_format)} "#{file_path}" "#{native_path}"

  EOF
end
